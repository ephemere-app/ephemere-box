name: Ephemere Box CI/CD

on: [push]

env:
  IMAGE_NAME: ephemereapp/ephemere-box
  IMAGE_TAG: latest

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.7'
      - name: Cache Python modules
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          pipenv install --dev --deploy
      - name: Run QA
        run: |
          pipenv run inv qa
          pipenv run coverage xml
      - name: Publish code coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  build-docker:
    name: Docker build
    runs-on: ubuntu-latest
    needs: test
    if: contains(github.ref, 'master') || contains(github.ref, 'tags')

    steps:
      - uses: actions/checkout@v2
      - name: Select Docker image tag (production only)
        if: contains(github.ref, 'tags')
        run: echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Login, pull, build and push to Docker Registry
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker pull $IMAGE_NAME:latest || true
          docker build -t $IMAGE_NAME:$IMAGE_TAG --cache-from $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$IMAGE_TAG
